! What the frames around sections of the dialog look like.
*TRASHChoose.TRASHChooseFrame.borderWidth:	2
*TRASHChoose.TRASHChooseFrame.relief:	ridge

! Details of the frame surrounding the font hostname chooser.  The
! accelerator resource specifies a *focussing* accelerator to the
! contents of the box.
*TRASHChoose.lblDatestamp.text:		Datestamp
*TRASHChoose.lblDatestamp.underline:	0
*TRASHChoose.lblDatestamp.accelerator:	Control-f

! Details of the frame surrounding the style options selectors.
*TRASHChoose.lblHostname.text:		Hostnames
*TRASHChoose.lblHostname.underline:	2
*TRASHChoose.lblHostname.accelerator:	Control-y

! Details of the frame surrounding the font size selectors.
*TRASHChoose.lblSize.text:		Real-Time deletion value
*TRASHChoose.lblSize.underline:	2
*TRASHChoose.lblSize.accelerator:	Control-z

! Details of the frame surrounding the font Apply on selectors.
*TRASHChoose.lblOption.text:		Options
*TRASHChoose.lblOption.underline:	2
*TRASHChoose.lblOption.accelerator:	Control-z

! Style checkbuttons (bold, italic, etc.) are all anchored to the left
! of their space.  However, they are also all stuck to both the left
! and the right side of their space by the GM.  This produces a better
! effect with highlighting checkbuttons...
*TRASHChoose.Checkbutton.anchor:	w
! Put some gaps on the labels for the frame labels.  Looks better like
! that...
*TRASHChoose.Label.padX:	1m
*TRASHChoose.Label.padY:	1

! Extra details of the font datestamp chooser.  The bindings are too
! complex to be specified here though...
*TRASHChoose.datestamp.height:		5
*TRASHChoose.datestamp.width:		12
*TRASHChoose.datestampX.orient:		horizontal
*TRASHChoose.datestampY.orient:		vertical

! Extra details of the font hostname chooser.  The bindings are too
! complex to be specified here though...
*TRASHChoose.hostname.height:		5
*TRASHChoose.hostname.width:		12
*TRASHChoose.hostnameX.orient:		horizontal
*TRASHChoose.hostnameY.orient:		vertical
*TRASHChoose.Scrollbar.takeFocus:	0

! Size chooser details.  Note that I don't give accelerators for these
! though the capability is present in the underlying hostnamery.
*TRASHChoose.size1.text:	1
*TRASHChoose.size2.text:	2
*TRASHChoose.size3.text:	3
*TRASHChoose.size4.text:	4
*TRASHChoose.size5.text:	5
*TRASHChoose.size6.text:	6
*TRASHChoose.Radiobutton.anchor:	w
! I like to make user-editable areas white (so users can see that they
! are meant to edit there.
*TRASHChoose.Entry.background:	white

! Emboldened style toggle.  The accelerator focusses and invokes.
*TRASHChoose.optionAllhost.text:	All Host
*TRASHChoose.optionAllhost.underline:	0
*TRASHChoose.optionAllhost.accelerator:	Control-t

! Italicised style toggle.  The accelerator focusses and invokes.
*TRASHChoose.optionLogs.text:	Delete Logs
*TRASHChoose.optionLogs.underline:	0
*TRASHChoose.optionLogs.accelerator:	Control-l

! Italicised style toggle.  The accelerator focusses and invokes.
*TRASHChoose.optionNb.text:	        Use Real-Time
*TRASHChoose.optionNb.underline:	0
*TRASHChoose.optionNb.accelerator:	Control-l

! What the buttons look like.  Note that for the buttons to look right
! on Unix, you must either make all the buttons have their default
! option be disabled, or none of them disabled.  The current
! arrangement looks good...
*TRASHChoose.butnframe.can.default:	active
*TRASHChoose.butnframe.can.text:	Cancel
*TRASHChoose.butnframe.can.accelerator:	Return

*TRASHChoose.butnframe.cln.default:	normal
*TRASHChoose.butnframe.cln.text:	Clean
*TRASHChoose.butnframe.cln.underline:	0
*TRASHChoose.butnframe.cln.accelerator:	Meta-a
