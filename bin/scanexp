#!/bin/ksh

arguments=$*
eval `cclargs $0 \
  -e        ""                    "$SEQ_EXP_HOME"              "[Target experiment or suites.xml file]" \
  -h        ""                    ""                           "[Display help]" \
  -s        ""                    ""                           "[Which string to look for]" \
  -i        "0"                   "1"                          "[Ignore case?]" \
  -v        "0"                   "1"                          "[Verbose]" \
  -l        "0"                   "1"                          "[Search listings too (much longer)]" \
  ++ $arguments`

[[ $v == 1 ]] && set -x 

if [[ -z $s ]]; then 
   echo "Error: -s (string to look for) argument must be defined."
   exit 1
fi
if [[ -z $e ]]; then 
   echo Error: -e argument or SEQ_EXP_HOME must be defined.
   exit 1
elif [[ -d $e  ]] ; then 
    exps=$e
else 
    exps=$(grep "<Exp>" $e | cut -d ">" -f 2 | cut -d "<" -f 1) 
fi

[[ "$i" == "1" ]] && ignore=i 

for exp in $exps ; do

    ! [[ -d  $exp ]] && continue    
    echo "\n --> Scanning under $exp ..."
    [[ -f  $exp/experiment.cfg ]] && grep -${ignore}H $s $exp/experiment.cfg   
    [[ -d  $exp/modules/ ]] && find $exp/modules/ -follow -type f -exec grep -${ignore}H $s {} \;  
    [[ -d  $exp/resources/ ]] && find $exp/resources/ -follow -type f -exec grep -${ignore}H $s {} \;  
    [[ -d  $exp/bin/ ]] && find $exp/bin/ -follow -type f -exec grep -${ignore}H $s {} \;  
    if [[ "$l" == "1" ]]; then
        for machine in `ls $exp/listings`; do 
            [[ "$machine" == "latest" ]] && continue
            if  ls $exp/listings/$machine/  ; then 
                #visible local
                find $exp/listings/$machine/ -type f -exec zgrep -${ignore}H $s {} \;
            else 
                echo "\n==Logging on $machine to scan listings=="
                ping -q -c 1 $machine >> /dev/null && ssh $machine find $exp/listings/$machine/ -type f -exec zgrep -${ignore}H $s {} \;
            fi
        done 
    fi 
   
done
