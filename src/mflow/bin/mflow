#!/bin/bash

MFLOW_ROOT=$(dirname $(dirname $(realpath $0)))

$MFLOW_ROOT/bin/assert_mflow_is_setup || exit 1

# This value is used to distinguish multiple instances of mflow.
# This helps with persistence for relaunches within the loop below.
TUI_ID=$(date +"%s.%N")

# To change this value, it must also be changed in the Python constants script src/constants/path.py
TMP_BASH_WRAPPER_COMMAND_FILE_PREFIX="$HOME/tmp/mflow/.tmp-bash-wrapper-command-"
TMP_BASH_WRAPPER_COMMAND_FILE="${TMP_BASH_WRAPPER_COMMAND_FILE_PREFIX}${TUI_ID}"

rm -f TMP_BASH_WRAPPER_COMMAND_FILE
export IS_MFLOW_LAUNCHED_FROM_WRAPPER=true
export MFLOW_LOGGING_CONFIG=mflow

FIRST_LOOP="true"
while [[ $FIRST_LOOP == "true" || -f $TMP_BASH_WRAPPER_COMMAND_FILE ]] ; do    
    FIRST_LOOP="false"
    
    # If this tmp file exists, it means the Python script mflow wants it 
    # to be launched in bash. Launch it, then remove the tmp file so it isn't 
    # launched again, and launch Python mflow again.
    if [[ -f $TMP_BASH_WRAPPER_COMMAND_FILE ]] ; then
        cat $TMP_BASH_WRAPPER_COMMAND_FILE
        echo
        $(cat $TMP_BASH_WRAPPER_COMMAND_FILE)
        rm -f $TMP_BASH_WRAPPER_COMMAND_FILE
    fi
    
    $MFLOW_ROOT/venv/bin/python3 $MFLOW_ROOT/src/mflow.py $@ --tui-id=$TUI_ID
done
