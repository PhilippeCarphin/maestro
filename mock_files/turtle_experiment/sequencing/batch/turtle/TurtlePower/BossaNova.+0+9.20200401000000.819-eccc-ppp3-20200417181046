#!/bin/ksh
exec 1>/fs/homeu1/eccc/cmod/cmoi/sts271/.suites/turtle/sequencing/output//turtle/TurtlePower/BossaNova.+0+9.eccc-ppp3-819-cs3be-020p12-20200417181046.out 2>&1
export ORDSOUMET_date_runwrapper=$(LC_TIME=C date)
ulimit -m 512000
ulimit -d 512000
ulimit -S -s unlimited
ulimit -t 60

test "immediate" = "immediate" && export IMMEDIATE_MODE=1 
[[ -n "" ]] && export AnSwErD=

. /etc/profile
. /home/sts271/.profile
. ssmuse-sh -d /fs/ssm/eccc/cmo/isst/maestro/1.6.8 
export SEQ_MAESTRO_SHORTCUT=". ssmuse-sh -d /fs/ssm/eccc/cmo/isst/maestro/1.6.8" 
export SEQ_EXP_HOME=/fs/homeu1/eccc/cmod/cmoi/sts271/.suites/turtle
export SEQ_EXP_NAME=turtle
export SEQ_TRACE_LEVEL=TL_CRITICAL
export SEQ_MODULE=turtle
export SEQ_CONTAINER=/turtle/TurtlePower
export SEQ_CURRENT_MODULE=turtle
export SEQ_CURRENT_CONTAINER=/turtle/TurtlePower/BossaNova
export SEQ_NPEX=1
export SEQ_NODE=/turtle/TurtlePower/BossaNova
export SEQ_NAME=BossaNova
export SEQ_LOOP_ARGS="-l TurtlePower=0,BossaNova=9"
export SEQ_LOOP_EXT="+0+9"
export SEQ_CONTAINER_LOOP_ARGS="-l TurtlePower=0"
export SEQ_CONTAINER_LOOP_EXT="+0"
export TurtlePower=0 
export BossaNova=9 
export SEQ_XFER=continue
export SEQ_WORKER_PATH=
export SEQ_TMP_CFG=/fs/homeu1/eccc/cmod/cmoi/sts271/.suites/turtle/sequencing/tmpfile//turtle/TurtlePower/BossaNova.+0+9.20200401000000.816.cfg
export SEQ_DATE=20200401000000
export SEQ_SHORT_DATE=2020040100
set -x
export JOB_ID=819
set +x
export SelfJobRemove="rm -f /fs/homeu1/eccc/cmod/cmoi/sts271/.suites/turtle/sequencing/jobinfo//turtle/TurtlePower/20200401000000@${JOB_ID:-${LOADL_STEP_ID%.*}} >/dev/null 2>&1 || true "
test -n "" && . r.ssmuse.dot NIL 

if [[ "${SEQ_LOOP_EXT}" == "" ]] ; then  
   jobout=/fs/homeu1/eccc/cmod/cmoi/sts271/.suites/turtle/sequencing/output//turtle/TurtlePower/${SEQ_NAME}.20200401000000.pgmout${JOB_ID}.$$
else
   jobout=/fs/homeu1/eccc/cmod/cmoi/sts271/.suites/turtle/sequencing/output//turtle/TurtlePower/${SEQ_NAME}.${SEQ_LOOP_EXT}.20200401000000.pgmout${JOB_ID}.$$
fi
set -ex
exec 2>$jobout >> $jobout 1>&2
function maestro_trap
{
  set -x
  printf "CODE ABORTS -- Check lines before trap statement for error.\n"
  ${SEQ_BIN}/maestro -s abort -f continue -n ${SEQ_NODE} ${SEQ_LOOP_ARGS}
  ${SEQ_BIN}/nodetracer -n ${SEQ_NODE} ${SEQ_LOOP_ARGS} -d ${SEQ_DATE} -type abort -i $jobout -c
  eval ${SelfJobRemove}
  rm -f ${SEQ_TMP_CFG}.complete ${SEQ_TMP_CFG}
  exit 1
}

trap 'trap "" ERR EXIT 12; maestro_trap ; exit 1' ERR EXIT 12
{
date 

 printf "Starting $SEQ_NODE $(date) JOB_ID=${JOB_ID:-${LOADL_STEP_ID}} 
 
 " 
 cd ${TMPDIR}
${SEQ_BIN}/maestro -s begin -n ${SEQ_NODE} -f ${SEQ_XFER} ${SEQ_LOOP_ARGS}
 SEQ_NODE_TYPE=$(${SEQ_BIN}/nodeinfo -n $SEQ_NODE -f type)
 if [[ ${SEQ_NODE_TYPE} = 'node.type=Task' ||  ${SEQ_NODE_TYPE} = 'node.type=NpassTask' ]] ; then 
 	 export JOB_IMMEDIATE_MODE=1
 	 ${SEQ_BIN}/chaindot.py -e ${SEQ_EXP_HOME} -n ${SEQ_NODE} -o ${SEQ_TMP_CFG}.complete
 	 export SEQ_WORKBASE=$(nodework -n ${SEQ_NODE} ${SEQ_LOOP_ARGS} -base | cut -d ':' -f 2)
 if [[ -d ${SEQ_WORKBASE} ]]; then 
 	 touch ${SEQ_WORKBASE}
 else 
 	 mkdir -p $SEQ_WORKBASE
 fi
 	 . ${SEQ_BIN}/task_setup.dot -f ${SEQ_TMP_CFG}.complete --base $(nodework -n ${SEQ_NODE} ${SEQ_LOOP_ARGS} | cut -d ':' -f 2) --clean --verbose --force
 	 cd ${TASK_WORK} 
 fi
 printf "USER CODE BEGINS 
 " 
 printf " #____________________________________________________________#
 " 
. /fs/homeu1/eccc/cmod/cmoi/sts271/.suites/turtle/sequencing/wrapped/turtle/TurtlePower/BossaNova.+0+9.wrapped.20200401000000.819-eccc-ppp3-20200417181046 
 printf " #____________________________________________________________#
 " 
 printf "USER CODE ENDS 
 " 
 set -x
 printf " Ending $SEQ_NODE $(date) 
 " 
} 
echo ${SelfJobRemove} 
echo "nodetracer -n ${SEQ_NODE} ${SEQ_LOOP_ARGS} -d ${SEQ_DATE} -i ${jobout} -c" 
${SEQ_BIN}/nodetracer -n ${SEQ_NODE} ${SEQ_LOOP_ARGS} -d ${SEQ_DATE} -i ${jobout} -c 
eval ${SelfJobRemove}
rm -f ${SEQ_TMP_CFG}.complete ${SEQ_TMP_CFG} 
trap "" ERR EXIT 12
